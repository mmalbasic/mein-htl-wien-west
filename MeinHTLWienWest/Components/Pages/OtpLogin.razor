@page "/otp-login"
@inject NavigationManager navManager
@layout LoginLayout
@using MailKit.Net.Smtp
@using MeinHTLWienWest.Components.Layout
@using MeinHTLWienWest.Services.Authentication
@using MimeKit
@using Org.BouncyCastle.Security

<PageTitle>OTP Code</PageTitle>

<!DOCTYPE html>
<html>
<head>
    <title>OTP Code</title>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap" rel="stylesheet">
</head>
<body>
    <div class="main">
        <h1 class="title">Code eingeben</h1>

        <input type="text" class="otp-input" placeholder="123456" maxlength="6" @bind-value="@inputOtpCode">

        @if (Helper.IsNewUser)
        {
            <select class="styled-dropdown" @bind="@selectedDropdown">
                <option value="Schüler" selected>Schüler</option>
                <option value="Lehrer">Lehrer</option>
            </select>
        }


        <button class="login-button confirm" @onclick="Proceed">Bestätigen</button>
        <button class="login-button back" @onclick="GoBack">Zurück</button>
        <p>@status</p>
    </div>
</body>
</html>

<style>
    p {
    color: red;
    }
    body {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    font-family: 'Jost', sans-serif;
    background: linear-gradient(to bottom, #000000, #1a1a1a, #333333);
    }

    .main {
    width: 350px;
    height: 350px;
    background: rgba(50, 50, 50, 0.7);
    border-radius: 10px;
    box-shadow: 5px 20px 50px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px;
    }

    .title {
    color: white;
    font-size: 1.8em;
    font-weight: bold;
    margin-bottom: 15px;
    text-align: center;
    }

    .otp-input {
    width: 60%;
    height: 40px;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    border-radius: 5px;
    text-align: center;
    font-size: 1.5em;
    letter-spacing: 5px;
    outline: none;
    margin-bottom: 15px;
    }

    .styled-dropdown {
    width: 70%;
    height: 40px;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: none;
    border-radius: 5px;
    text-align: center;
    font-size: 1em;
    outline: none;
    margin-bottom: 15px;
    cursor: pointer;
    }

    .styled-dropdown option {
    background: rgba(50, 50, 50, 0.9);
    color: white;
    }

    .login-button {
    width: 80%;
    height: 45px;
    margin: 10px 0;
    justify-content: center;
    display: flex;
    align-items: center;
    font-size: 1em;
    font-weight: bold;
    outline: none;
    border: none;
    border-radius: 5px;
    transition: .2s ease-in;
    cursor: pointer;
    }

    .confirm {
    background: black;
    color: white;
    }

    .confirm:hover {
    background: rgba(30, 30, 30, 1);
    box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.2);
    }

    .back {
    background: rgba(30, 30, 30, 0.8);
    color: #bbb;
    }

    .back:hover {
    background: rgba(50, 50, 50, 1);
    color: white;
    box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.2);
    }
</style>


@code {
    private string correctOtpCode = "";
    private string inputOtpCode = "";
    private string selectedDropdown = "";
    private string status = "";

    protected override void OnInitialized()
    {
        if (!Helper.IsSent)
        {
            SecureRandom random = new SecureRandom();
            correctOtpCode = random.Next(0, 1000000).ToString().PadLeft(6, '0');
            Helper.IsSent = AuthManager.SendOTPCode(correctOtpCode, Helper.CurrentEmail);
        }
    }

    private void GoBack()
    {
        navManager.NavigateTo("/OhneCerasis-login");
    }

    private async Task Proceed()
    {

        if (correctOtpCode == inputOtpCode)
        {

            if (Helper.IsNewUser)
            {
                status = await AuthManager.Register(selectedDropdown);
            }
            else
            {
                status = await AuthManager.Login();
            }
            navManager.NavigateTo("/main", true);
            return;
        }
        else
        {
            status = "Der eingegebene Code ist falsch";
        }

        await AuthManager.LoadUserDetails();

        navManager.NavigateTo("/tickets");
    }

  

}
